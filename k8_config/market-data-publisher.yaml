apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: market-data-publisher
spec:
  serviceName: "market-data-publisher-service"
  replicas: 1
  selector:
    matchLabels:
      app: market-data-publisher
  template:
    metadata:
      labels:
        app: market-data-publisher
    spec:
      containers:
        - name: market-data-publisher-container
          image: market-data-publisher:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: RABBITMQ_HOST
              value: rabbitmq-service  # Use the service name
            - name: RABBITMQ_PORT
              value: "5673"
            - name: REDIS_HOST
              value: redis 
            - name: REDIS_PORT
              value: "6379"         # Default Redis port
            - name: RABBITMQ_ORDERBOOK_QUEUE
              value: orderbook_queue 
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: data-volume
              mountPath: /app/data  # Mount the volume to the app's directory
          resources:
            limits:
              cpu: 350m
              memory: 128M
            requests:
              cpu: 200m
              memory: 80M
  volumeClaimTemplates:
    - metadata:
        name: data-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi 
---
apiVersion: v1
kind: Service
metadata:
  name: market-data-publisher-service
spec:
  selector:
    app: market-data-publisher
  ports:
    - port: 8080
      targetPort: 8080
  type: LoadBalancer
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: market-data-publisher-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: market-data-publisher
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
