version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq2
    environment:
      - RABBITMQ_LOGS=error # Setting logs to 'error' for less verbosity
    ports:
      - "15673:15672" # RabbitMQ Management UI
      - "5673:5672" # AMQP port for RabbitMQ consumers/producers
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 5s
      timeout: 60s
      retries: 12

  client_order_streamer:
    build: ./client_order_streamer
    depends_on:
      rabbitmq:
        condition: service_healthy # Wait for RabbitMQ to be healthy
    environment:
      - RABBITMQ_URL=amqp://rabbitmq
    restart: on-failure
    volumes:
      - ./client_order_streamer/data:/app/data

  client_gateway:
    build: ./client_gateway
    depends_on:
      rabbitmq:
        condition: service_healthy # Wait for RabbitMQ to be healthy
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5673
    restart: on-failure

  order_manager:
    build: ./order_manager
    depends_on:
      rabbitmq:
        condition: service_healthy # Wait for RabbitMQ to be healthy
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5673
    restart: on-failure

  market_data_publisher:
    build: ./market_data_publisher
    depends_on:
      rabbitmq:
        condition: service_healthy # Wait for RabbitMQ to be healthy
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5673
    restart: on-failure
    volumes:
      - ./matching-engine:/app/matching-engine # Mount matching-engine folder
    ports:
      - "8080:8080" # Expose the WebSocket server
